// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vanguardium.Infra.ORM.Context;

#nullable disable

namespace Vanguardium.Infra.ORM.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20250107125946_add new property and modification types")]
    partial class addnewpropertyandmodificationtypes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Vanguardium.Domain.Entities.Address", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("city")
                        .HasColumnOrder(3);

                    b.Property<string>("Complement")
                        .IsUnicode(true)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("complement")
                        .HasColumnOrder(9);

                    b.Property<string>("Country")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("country")
                        .HasColumnOrder(7);

                    b.Property<string>("District")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("district")
                        .HasColumnOrder(4);

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasColumnName("zip_code")
                        .HasColumnOrder(8);

                    b.Property<string>("State")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("state")
                        .HasColumnOrder(2);

                    b.Property<string>("Street")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("street")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.ToTable("Address", "Vanguardium");
                });

            modelBuilder.Entity("Vanguardium.Domain.Entities.Company", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("AddressId")
                        .HasColumnType("bigint");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("contactNumber")
                        .HasColumnOrder(4);

                    b.Property<string>("CorporateName")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("corporateName")
                        .HasColumnOrder(2);

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("document")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique()
                        .HasFilter("[AddressId] IS NOT NULL");

                    b.ToTable("Company", "Vanguardium");
                });

            modelBuilder.Entity("Vanguardium.Domain.Entities.Transfers", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_date")
                        .HasColumnOrder(5);

                    b.Property<Guid>("RecipientId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("recipientId")
                        .HasColumnOrder(3);

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("senderId")
                        .HasColumnOrder(2);

                    b.Property<byte>("StatusTransfer")
                        .HasColumnType("tinyint")
                        .HasColumnName("statusTransfer")
                        .HasColumnOrder(6);

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ValueForTransfer")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("value")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Transfers", "Vanguardium");
                });

            modelBuilder.Entity("Vanguardium.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    b.Property<long?>("AddressId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Balance")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("balance")
                        .HasColumnOrder(10);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DateOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("document")
                        .HasColumnOrder(3);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email")
                        .HasColumnOrder(4);

                    b.Property<byte>("Gender")
                        .HasColumnType("tinyint")
                        .HasColumnName("genero")
                        .HasColumnOrder(9);

                    b.Property<string>("Name")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("name")
                        .HasColumnOrder(2);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password")
                        .HasColumnOrder(5);

                    b.Property<byte>("Role")
                        .HasColumnType("tinyint")
                        .HasColumnName("role")
                        .HasColumnOrder(8);

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status")
                        .HasColumnOrder(7);

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("telephone")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique()
                        .HasFilter("[AddressId] IS NOT NULL");

                    b.ToTable("User", "Vanguardium");
                });

            modelBuilder.Entity("Vanguardium.Domain.Entities.Company", b =>
                {
                    b.HasOne("Vanguardium.Domain.Entities.Address", "Address")
                        .WithOne()
                        .HasForeignKey("Vanguardium.Domain.Entities.Company", "AddressId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Vanguardium.Domain.Entities.Transfers", b =>
                {
                    b.HasOne("Vanguardium.Domain.Entities.User", null)
                        .WithMany("Transfers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Vanguardium.Domain.Entities.User", b =>
                {
                    b.HasOne("Vanguardium.Domain.Entities.Address", "Address")
                        .WithOne()
                        .HasForeignKey("Vanguardium.Domain.Entities.User", "AddressId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Vanguardium.Domain.Entities.User", b =>
                {
                    b.Navigation("Transfers");
                });
#pragma warning restore 612, 618
        }
    }
}
